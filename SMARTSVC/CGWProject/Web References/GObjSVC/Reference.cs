//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace CGWProject.GObjSVC {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GObjSVCSoap", Namespace="http://GObjSVC.UsgKorea.com")]
    public partial class GObjSVC : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginEncryptedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadStyleSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWfUseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWfCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadFormSecurityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GObjSVC() {
            this.Url = global::CGWProject.Properties.Settings.Default.CGWProject_GObjSVC_GObjSVC;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event SSOLoginCompletedEventHandler SSOLoginCompleted;
        
        /// <remarks/>
        public event LoginEncryptedPasswordCompletedEventHandler LoginEncryptedPasswordCompleted;
        
        /// <remarks/>
        public event GetCurTimeCompletedEventHandler GetCurTimeCompleted;
        
        /// <remarks/>
        public event GetFormPathCompletedEventHandler GetFormPathCompleted;
        
        /// <remarks/>
        public event ExchRateCompletedEventHandler ExchRateCompleted;
        
        /// <remarks/>
        public event LoadStyleSheetCompletedEventHandler LoadStyleSheetCompleted;
        
        /// <remarks/>
        public event GetWfUseCompletedEventHandler GetWfUseCompleted;
        
        /// <remarks/>
        public event GetWfCountCompletedEventHandler GetWfCountCompleted;
        
        /// <remarks/>
        public event LoadFormSecurityCompletedEventHandler LoadFormSecurityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/Login", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] Login(string strUserID, string strPassWd, string strSiteCode, string strLangID, string strClientID, string strCertDigest, string strKey, string strUserIP, object objConditions) {
            object[] results = this.Invoke("Login", new object[] {
                        strUserID,
                        strPassWd,
                        strSiteCode,
                        strLangID,
                        strClientID,
                        strCertDigest,
                        strKey,
                        strUserIP,
                        objConditions});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string strUserID, string strPassWd, string strSiteCode, string strLangID, string strClientID, string strCertDigest, string strKey, string strUserIP, object objConditions) {
            this.LoginAsync(strUserID, strPassWd, strSiteCode, strLangID, strClientID, strCertDigest, strKey, strUserIP, objConditions, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string strUserID, string strPassWd, string strSiteCode, string strLangID, string strClientID, string strCertDigest, string strKey, string strUserIP, object objConditions, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        strUserID,
                        strPassWd,
                        strSiteCode,
                        strLangID,
                        strClientID,
                        strCertDigest,
                        strKey,
                        strUserIP,
                        objConditions}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/SSOLogin", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] SSOLogin(string strUserID, string strSiteCode, string strLangID, string strClientID, string strKey, string strUserIP, object objConditions) {
            object[] results = this.Invoke("SSOLogin", new object[] {
                        strUserID,
                        strSiteCode,
                        strLangID,
                        strClientID,
                        strKey,
                        strUserIP,
                        objConditions});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void SSOLoginAsync(string strUserID, string strSiteCode, string strLangID, string strClientID, string strKey, string strUserIP, object objConditions) {
            this.SSOLoginAsync(strUserID, strSiteCode, strLangID, strClientID, strKey, strUserIP, objConditions, null);
        }
        
        /// <remarks/>
        public void SSOLoginAsync(string strUserID, string strSiteCode, string strLangID, string strClientID, string strKey, string strUserIP, object objConditions, object userState) {
            if ((this.SSOLoginOperationCompleted == null)) {
                this.SSOLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOLoginOperationCompleted);
            }
            this.InvokeAsync("SSOLogin", new object[] {
                        strUserID,
                        strSiteCode,
                        strLangID,
                        strClientID,
                        strKey,
                        strUserIP,
                        objConditions}, this.SSOLoginOperationCompleted, userState);
        }
        
        private void OnSSOLoginOperationCompleted(object arg) {
            if ((this.SSOLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOLoginCompleted(this, new SSOLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/LoginEncryptedPassword", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] LoginEncryptedPassword(string strUserID, string strPassWd, string strSiteCode, string strLangID, string strClientID, string strCertDigest, string strKey, string strUserIP, object objConditions) {
            object[] results = this.Invoke("LoginEncryptedPassword", new object[] {
                        strUserID,
                        strPassWd,
                        strSiteCode,
                        strLangID,
                        strClientID,
                        strCertDigest,
                        strKey,
                        strUserIP,
                        objConditions});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginEncryptedPasswordAsync(string strUserID, string strPassWd, string strSiteCode, string strLangID, string strClientID, string strCertDigest, string strKey, string strUserIP, object objConditions) {
            this.LoginEncryptedPasswordAsync(strUserID, strPassWd, strSiteCode, strLangID, strClientID, strCertDigest, strKey, strUserIP, objConditions, null);
        }
        
        /// <remarks/>
        public void LoginEncryptedPasswordAsync(string strUserID, string strPassWd, string strSiteCode, string strLangID, string strClientID, string strCertDigest, string strKey, string strUserIP, object objConditions, object userState) {
            if ((this.LoginEncryptedPasswordOperationCompleted == null)) {
                this.LoginEncryptedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginEncryptedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginEncryptedPassword", new object[] {
                        strUserID,
                        strPassWd,
                        strSiteCode,
                        strLangID,
                        strClientID,
                        strCertDigest,
                        strKey,
                        strUserIP,
                        objConditions}, this.LoginEncryptedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginEncryptedPasswordOperationCompleted(object arg) {
            if ((this.LoginEncryptedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginEncryptedPasswordCompleted(this, new LoginEncryptedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/GetCurTime", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetCurTime(string strClientID) {
            object[] results = this.Invoke("GetCurTime", new object[] {
                        strClientID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurTimeAsync(string strClientID) {
            this.GetCurTimeAsync(strClientID, null);
        }
        
        /// <remarks/>
        public void GetCurTimeAsync(string strClientID, object userState) {
            if ((this.GetCurTimeOperationCompleted == null)) {
                this.GetCurTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurTimeOperationCompleted);
            }
            this.InvokeAsync("GetCurTime", new object[] {
                        strClientID}, this.GetCurTimeOperationCompleted, userState);
        }
        
        private void OnGetCurTimeOperationCompleted(object arg) {
            if ((this.GetCurTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurTimeCompleted(this, new GetCurTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/GetFormPath", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormPath(string strLangID, string strFormID, object[] GDObj) {
            object[] results = this.Invoke("GetFormPath", new object[] {
                        strLangID,
                        strFormID,
                        GDObj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormPathAsync(string strLangID, string strFormID, object[] GDObj) {
            this.GetFormPathAsync(strLangID, strFormID, GDObj, null);
        }
        
        /// <remarks/>
        public void GetFormPathAsync(string strLangID, string strFormID, object[] GDObj, object userState) {
            if ((this.GetFormPathOperationCompleted == null)) {
                this.GetFormPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormPathOperationCompleted);
            }
            this.InvokeAsync("GetFormPath", new object[] {
                        strLangID,
                        strFormID,
                        GDObj}, this.GetFormPathOperationCompleted, userState);
        }
        
        private void OnGetFormPathOperationCompleted(object arg) {
            if ((this.GetFormPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormPathCompleted(this, new GetFormPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/ExchRate", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal ExchRate(object[] GDObj, string ExchGubun, string strCurrCode, string strDate) {
            object[] results = this.Invoke("ExchRate", new object[] {
                        GDObj,
                        ExchGubun,
                        strCurrCode,
                        strDate});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void ExchRateAsync(object[] GDObj, string ExchGubun, string strCurrCode, string strDate) {
            this.ExchRateAsync(GDObj, ExchGubun, strCurrCode, strDate, null);
        }
        
        /// <remarks/>
        public void ExchRateAsync(object[] GDObj, string ExchGubun, string strCurrCode, string strDate, object userState) {
            if ((this.ExchRateOperationCompleted == null)) {
                this.ExchRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchRateOperationCompleted);
            }
            this.InvokeAsync("ExchRate", new object[] {
                        GDObj,
                        ExchGubun,
                        strCurrCode,
                        strDate}, this.ExchRateOperationCompleted, userState);
        }
        
        private void OnExchRateOperationCompleted(object arg) {
            if ((this.ExchRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchRateCompleted(this, new ExchRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/LoadStyleSheet", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadStyleSheet(object[] GDObj, string strObjID, ref string strGridSelColor, string strClientID) {
            object[] results = this.Invoke("LoadStyleSheet", new object[] {
                        GDObj,
                        strObjID,
                        strGridSelColor,
                        strClientID});
            strGridSelColor = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadStyleSheetAsync(object[] GDObj, string strObjID, string strGridSelColor, string strClientID) {
            this.LoadStyleSheetAsync(GDObj, strObjID, strGridSelColor, strClientID, null);
        }
        
        /// <remarks/>
        public void LoadStyleSheetAsync(object[] GDObj, string strObjID, string strGridSelColor, string strClientID, object userState) {
            if ((this.LoadStyleSheetOperationCompleted == null)) {
                this.LoadStyleSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadStyleSheetOperationCompleted);
            }
            this.InvokeAsync("LoadStyleSheet", new object[] {
                        GDObj,
                        strObjID,
                        strGridSelColor,
                        strClientID}, this.LoadStyleSheetOperationCompleted, userState);
        }
        
        private void OnLoadStyleSheetOperationCompleted(object arg) {
            if ((this.LoadStyleSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadStyleSheetCompleted(this, new LoadStyleSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/GetWfUse", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetWfUse(object[] GDObj, string strFormID) {
            object[] results = this.Invoke("GetWfUse", new object[] {
                        GDObj,
                        strFormID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetWfUseAsync(object[] GDObj, string strFormID) {
            this.GetWfUseAsync(GDObj, strFormID, null);
        }
        
        /// <remarks/>
        public void GetWfUseAsync(object[] GDObj, string strFormID, object userState) {
            if ((this.GetWfUseOperationCompleted == null)) {
                this.GetWfUseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWfUseOperationCompleted);
            }
            this.InvokeAsync("GetWfUse", new object[] {
                        GDObj,
                        strFormID}, this.GetWfUseOperationCompleted, userState);
        }
        
        private void OnGetWfUseOperationCompleted(object arg) {
            if ((this.GetWfUseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWfUseCompleted(this, new GetWfUseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/GetWfCount", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetWfCount(ref int iIBCount, ref int iRBCount, object[] GDObj) {
            object[] results = this.Invoke("GetWfCount", new object[] {
                        iIBCount,
                        iRBCount,
                        GDObj});
            iIBCount = ((int)(results[0]));
            iRBCount = ((int)(results[1]));
        }
        
        /// <remarks/>
        public void GetWfCountAsync(int iIBCount, int iRBCount, object[] GDObj) {
            this.GetWfCountAsync(iIBCount, iRBCount, GDObj, null);
        }
        
        /// <remarks/>
        public void GetWfCountAsync(int iIBCount, int iRBCount, object[] GDObj, object userState) {
            if ((this.GetWfCountOperationCompleted == null)) {
                this.GetWfCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWfCountOperationCompleted);
            }
            this.InvokeAsync("GetWfCount", new object[] {
                        iIBCount,
                        iRBCount,
                        GDObj}, this.GetWfCountOperationCompleted, userState);
        }
        
        private void OnGetWfCountOperationCompleted(object arg) {
            if ((this.GetWfCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWfCountCompleted(this, new GetWfCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GObjSVC.UsgKorea.com/LoadFormSecurity", RequestNamespace="http://GObjSVC.UsgKorea.com", ResponseNamespace="http://GObjSVC.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] LoadFormSecurity(object[] GDObj, string strModuleInitial) {
            object[] results = this.Invoke("LoadFormSecurity", new object[] {
                        GDObj,
                        strModuleInitial});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadFormSecurityAsync(object[] GDObj, string strModuleInitial) {
            this.LoadFormSecurityAsync(GDObj, strModuleInitial, null);
        }
        
        /// <remarks/>
        public void LoadFormSecurityAsync(object[] GDObj, string strModuleInitial, object userState) {
            if ((this.LoadFormSecurityOperationCompleted == null)) {
                this.LoadFormSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadFormSecurityOperationCompleted);
            }
            this.InvokeAsync("LoadFormSecurity", new object[] {
                        GDObj,
                        strModuleInitial}, this.LoadFormSecurityOperationCompleted, userState);
        }
        
        private void OnLoadFormSecurityOperationCompleted(object arg) {
            if ((this.LoadFormSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadFormSecurityCompleted(this, new LoadFormSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SSOLoginCompletedEventHandler(object sender, SSOLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LoginEncryptedPasswordCompletedEventHandler(object sender, LoginEncryptedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginEncryptedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginEncryptedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCurTimeCompletedEventHandler(object sender, GetCurTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetFormPathCompletedEventHandler(object sender, GetFormPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ExchRateCompletedEventHandler(object sender, ExchRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LoadStyleSheetCompletedEventHandler(object sender, LoadStyleSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadStyleSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadStyleSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strGridSelColor {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetWfUseCompletedEventHandler(object sender, GetWfUseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWfUseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWfUseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetWfCountCompletedEventHandler(object sender, GetWfCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWfCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWfCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int iIBCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int iRBCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LoadFormSecurityCompletedEventHandler(object sender, LoadFormSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadFormSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadFormSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591