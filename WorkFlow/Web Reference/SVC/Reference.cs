//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace WorkFlow.SVC {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WorkFlowSoap", Namespace="http://WorkFlow.UsgKorea.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class WorkFlow : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WfSMGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfSMSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfSMDdlOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfSMGetWfUseOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRItemGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRItemGrid2OperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRPopupOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRPopup2OperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRGetMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfPSLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfPSGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfPSGrid1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultRouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDSave2OperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDLoad1OperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDLoad2OperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDLoad3OperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDOneQueOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDReadCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfIBQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfIBCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfMBQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRBQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRBCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfDoCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback WfRouteStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanBeApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback hasApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApproveAllOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WorkFlow() {
            this.Url = global::WorkFlow.Properties.Settings.Default.WorkFlow_SVC_WorkFlow;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WfSMGridCompletedEventHandler WfSMGridCompleted;
        
        /// <remarks/>
        public event WfSMSaveCompletedEventHandler WfSMSaveCompleted;
        
        /// <remarks/>
        public event WfSMDdlCompletedEventHandler WfSMDdlCompleted;
        
        /// <remarks/>
        public event WfSMGetWfUseCompletedEventHandler WfSMGetWfUseCompleted;
        
        /// <remarks/>
        public event WfRGridCompletedEventHandler WfRGridCompleted;
        
        /// <remarks/>
        public event WfRSaveCompletedEventHandler WfRSaveCompleted;
        
        /// <remarks/>
        public event WfRLoadCompletedEventHandler WfRLoadCompleted;
        
        /// <remarks/>
        public event WfRItemGridCompletedEventHandler WfRItemGridCompleted;
        
        /// <remarks/>
        public event WfRItemGrid2CompletedEventHandler WfRItemGrid2Completed;
        
        /// <remarks/>
        public event WfRDeleteCompletedEventHandler WfRDeleteCompleted;
        
        /// <remarks/>
        public event WfRPopupCompletedEventHandler WfRPopupCompleted;
        
        /// <remarks/>
        public event WfRPopup2CompletedEventHandler WfRPopup2Completed;
        
        /// <remarks/>
        public event WfRGetMailCompletedEventHandler WfRGetMailCompleted;
        
        /// <remarks/>
        public event WfPSLoadCompletedEventHandler WfPSLoadCompleted;
        
        /// <remarks/>
        public event WfPSGridCompletedEventHandler WfPSGridCompleted;
        
        /// <remarks/>
        public event WfPSGrid1CompletedEventHandler WfPSGrid1Completed;
        
        /// <remarks/>
        public event GetDefaultRouteCompletedEventHandler GetDefaultRouteCompleted;
        
        /// <remarks/>
        public event GetDomainNameCompletedEventHandler GetDomainNameCompleted;
        
        /// <remarks/>
        public event WfDSave2CompletedEventHandler WfDSave2Completed;
        
        /// <remarks/>
        public event WfDSaveCompletedEventHandler WfDSaveCompleted;
        
        /// <remarks/>
        public event WfDLoad1CompletedEventHandler WfDLoad1Completed;
        
        /// <remarks/>
        public event WfDLoad2CompletedEventHandler WfDLoad2Completed;
        
        /// <remarks/>
        public event WfDLoad3CompletedEventHandler WfDLoad3Completed;
        
        /// <remarks/>
        public event WfDDeleteCompletedEventHandler WfDDeleteCompleted;
        
        /// <remarks/>
        public event WfDOneQueCompletedEventHandler WfDOneQueCompleted;
        
        /// <remarks/>
        public event WfDReadCheckCompletedEventHandler WfDReadCheckCompleted;
        
        /// <remarks/>
        public event WfIBQueryCompletedEventHandler WfIBQueryCompleted;
        
        /// <remarks/>
        public event WfIBCountCompletedEventHandler WfIBCountCompleted;
        
        /// <remarks/>
        public event WfMBQueryCompletedEventHandler WfMBQueryCompleted;
        
        /// <remarks/>
        public event WfRBQueryCompletedEventHandler WfRBQueryCompleted;
        
        /// <remarks/>
        public event WfRBCountCompletedEventHandler WfRBCountCompleted;
        
        /// <remarks/>
        public event WfDoCountCompletedEventHandler WfDoCountCompleted;
        
        /// <remarks/>
        public event WfRouteStepCompletedEventHandler WfRouteStepCompleted;
        
        /// <remarks/>
        public event CanBeApproveCompletedEventHandler CanBeApproveCompleted;
        
        /// <remarks/>
        public event hasApprovedCompletedEventHandler hasApprovedCompleted;
        
        /// <remarks/>
        public event getApproveAllCompletedEventHandler getApproveAllCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfSMGrid", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfSMGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfSMGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfSMGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfSMGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfSMGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfSMGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfSMGridAsync(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfSMGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfSMGridOperationCompleted == null)) {
                this.WfSMGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfSMGridOperationCompleted);
            }
            this.InvokeAsync("WfSMGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfSMGridOperationCompleted, userState);
        }
        
        private void OnWfSMGridOperationCompleted(object arg) {
            if ((this.WfSMGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfSMGridCompleted(this, new WfSMGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfSMSave", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfSMSave(object[] GDObj, string strLangID, string[] sarFormID, string[] sarWfUse, string[] sarWfDescr) {
            object[] results = this.Invoke("WfSMSave", new object[] {
                        GDObj,
                        strLangID,
                        sarFormID,
                        sarWfUse,
                        sarWfDescr});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfSMSave(object[] GDObj, string strLangID, string[] sarFormID, string[] sarWfUse, string[] sarWfDescr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfSMSave", new object[] {
                        GDObj,
                        strLangID,
                        sarFormID,
                        sarWfUse,
                        sarWfDescr}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfSMSave(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfSMSaveAsync(object[] GDObj, string strLangID, string[] sarFormID, string[] sarWfUse, string[] sarWfDescr) {
            this.WfSMSaveAsync(GDObj, strLangID, sarFormID, sarWfUse, sarWfDescr, null);
        }
        
        /// <remarks/>
        public void WfSMSaveAsync(object[] GDObj, string strLangID, string[] sarFormID, string[] sarWfUse, string[] sarWfDescr, object userState) {
            if ((this.WfSMSaveOperationCompleted == null)) {
                this.WfSMSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfSMSaveOperationCompleted);
            }
            this.InvokeAsync("WfSMSave", new object[] {
                        GDObj,
                        strLangID,
                        sarFormID,
                        sarWfUse,
                        sarWfDescr}, this.WfSMSaveOperationCompleted, userState);
        }
        
        private void OnWfSMSaveOperationCompleted(object arg) {
            if ((this.WfSMSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfSMSaveCompleted(this, new WfSMSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfSMDdl", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfSMDdl(object[] GDObj, string strWfUse) {
            object[] results = this.Invoke("WfSMDdl", new object[] {
                        GDObj,
                        strWfUse});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfSMDdl(object[] GDObj, string strWfUse, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfSMDdl", new object[] {
                        GDObj,
                        strWfUse}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfSMDdl(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfSMDdlAsync(object[] GDObj, string strWfUse) {
            this.WfSMDdlAsync(GDObj, strWfUse, null);
        }
        
        /// <remarks/>
        public void WfSMDdlAsync(object[] GDObj, string strWfUse, object userState) {
            if ((this.WfSMDdlOperationCompleted == null)) {
                this.WfSMDdlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfSMDdlOperationCompleted);
            }
            this.InvokeAsync("WfSMDdl", new object[] {
                        GDObj,
                        strWfUse}, this.WfSMDdlOperationCompleted, userState);
        }
        
        private void OnWfSMDdlOperationCompleted(object arg) {
            if ((this.WfSMDdlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfSMDdlCompleted(this, new WfSMDdlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfSMGetWfUse", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfSMGetWfUse(object[] GDObj, string strFormID) {
            object[] results = this.Invoke("WfSMGetWfUse", new object[] {
                        GDObj,
                        strFormID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfSMGetWfUse(object[] GDObj, string strFormID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfSMGetWfUse", new object[] {
                        GDObj,
                        strFormID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfSMGetWfUse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfSMGetWfUseAsync(object[] GDObj, string strFormID) {
            this.WfSMGetWfUseAsync(GDObj, strFormID, null);
        }
        
        /// <remarks/>
        public void WfSMGetWfUseAsync(object[] GDObj, string strFormID, object userState) {
            if ((this.WfSMGetWfUseOperationCompleted == null)) {
                this.WfSMGetWfUseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfSMGetWfUseOperationCompleted);
            }
            this.InvokeAsync("WfSMGetWfUse", new object[] {
                        GDObj,
                        strFormID}, this.WfSMGetWfUseOperationCompleted, userState);
        }
        
        private void OnWfSMGetWfUseOperationCompleted(object arg) {
            if ((this.WfSMGetWfUseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfSMGetWfUseCompleted(this, new WfSMGetWfUseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRGrid", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfRGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfRGridAsync(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfRGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfRGridOperationCompleted == null)) {
                this.WfRGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRGridOperationCompleted);
            }
            this.InvokeAsync("WfRGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfRGridOperationCompleted, userState);
        }
        
        private void OnWfRGridOperationCompleted(object arg) {
            if ((this.WfRGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRGridCompleted(this, new WfRGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRSave", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRSave(object[] GDObj, bool bSaveMode, string strComCode, string strCurEmp, string strLangID, string strSiteCode, string strRouteCode, string strRouteName, string strFirstStepTitle, string strUserGroup, string strRouteDescr, string strRouteUse, string[] sarStepTitle, string[] sarUserID, string[] sarAbsentEmp) {
            object[] results = this.Invoke("WfRSave", new object[] {
                        GDObj,
                        bSaveMode,
                        strComCode,
                        strCurEmp,
                        strLangID,
                        strSiteCode,
                        strRouteCode,
                        strRouteName,
                        strFirstStepTitle,
                        strUserGroup,
                        strRouteDescr,
                        strRouteUse,
                        sarStepTitle,
                        sarUserID,
                        sarAbsentEmp});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRSave(
                    object[] GDObj, 
                    bool bSaveMode, 
                    string strComCode, 
                    string strCurEmp, 
                    string strLangID, 
                    string strSiteCode, 
                    string strRouteCode, 
                    string strRouteName, 
                    string strFirstStepTitle, 
                    string strUserGroup, 
                    string strRouteDescr, 
                    string strRouteUse, 
                    string[] sarStepTitle, 
                    string[] sarUserID, 
                    string[] sarAbsentEmp, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("WfRSave", new object[] {
                        GDObj,
                        bSaveMode,
                        strComCode,
                        strCurEmp,
                        strLangID,
                        strSiteCode,
                        strRouteCode,
                        strRouteName,
                        strFirstStepTitle,
                        strUserGroup,
                        strRouteDescr,
                        strRouteUse,
                        sarStepTitle,
                        sarUserID,
                        sarAbsentEmp}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRSave(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRSaveAsync(object[] GDObj, bool bSaveMode, string strComCode, string strCurEmp, string strLangID, string strSiteCode, string strRouteCode, string strRouteName, string strFirstStepTitle, string strUserGroup, string strRouteDescr, string strRouteUse, string[] sarStepTitle, string[] sarUserID, string[] sarAbsentEmp) {
            this.WfRSaveAsync(GDObj, bSaveMode, strComCode, strCurEmp, strLangID, strSiteCode, strRouteCode, strRouteName, strFirstStepTitle, strUserGroup, strRouteDescr, strRouteUse, sarStepTitle, sarUserID, sarAbsentEmp, null);
        }
        
        /// <remarks/>
        public void WfRSaveAsync(
                    object[] GDObj, 
                    bool bSaveMode, 
                    string strComCode, 
                    string strCurEmp, 
                    string strLangID, 
                    string strSiteCode, 
                    string strRouteCode, 
                    string strRouteName, 
                    string strFirstStepTitle, 
                    string strUserGroup, 
                    string strRouteDescr, 
                    string strRouteUse, 
                    string[] sarStepTitle, 
                    string[] sarUserID, 
                    string[] sarAbsentEmp, 
                    object userState) {
            if ((this.WfRSaveOperationCompleted == null)) {
                this.WfRSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRSaveOperationCompleted);
            }
            this.InvokeAsync("WfRSave", new object[] {
                        GDObj,
                        bSaveMode,
                        strComCode,
                        strCurEmp,
                        strLangID,
                        strSiteCode,
                        strRouteCode,
                        strRouteName,
                        strFirstStepTitle,
                        strUserGroup,
                        strRouteDescr,
                        strRouteUse,
                        sarStepTitle,
                        sarUserID,
                        sarAbsentEmp}, this.WfRSaveOperationCompleted, userState);
        }
        
        private void OnWfRSaveOperationCompleted(object arg) {
            if ((this.WfRSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRSaveCompleted(this, new WfRSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRLoad", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRLoad(object[] GDObj, string strRouteCode) {
            object[] results = this.Invoke("WfRLoad", new object[] {
                        GDObj,
                        strRouteCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRLoad(object[] GDObj, string strRouteCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRLoad", new object[] {
                        GDObj,
                        strRouteCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRLoad(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRLoadAsync(object[] GDObj, string strRouteCode) {
            this.WfRLoadAsync(GDObj, strRouteCode, null);
        }
        
        /// <remarks/>
        public void WfRLoadAsync(object[] GDObj, string strRouteCode, object userState) {
            if ((this.WfRLoadOperationCompleted == null)) {
                this.WfRLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRLoadOperationCompleted);
            }
            this.InvokeAsync("WfRLoad", new object[] {
                        GDObj,
                        strRouteCode}, this.WfRLoadOperationCompleted, userState);
        }
        
        private void OnWfRLoadOperationCompleted(object arg) {
            if ((this.WfRLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRLoadCompleted(this, new WfRLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRItemGrid", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRItemGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfRItemGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRItemGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRItemGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRItemGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRItemGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfRItemGridAsync(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfRItemGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfRItemGridOperationCompleted == null)) {
                this.WfRItemGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRItemGridOperationCompleted);
            }
            this.InvokeAsync("WfRItemGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfRItemGridOperationCompleted, userState);
        }
        
        private void OnWfRItemGridOperationCompleted(object arg) {
            if ((this.WfRItemGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRItemGridCompleted(this, new WfRItemGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRItemGrid2", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRItemGrid2(bool bStartQuery, string formID, string originNo, string originSerNo, string routeCode, object[] GDObj, string strMoreKey) {
            object[] results = this.Invoke("WfRItemGrid2", new object[] {
                        bStartQuery,
                        formID,
                        originNo,
                        originSerNo,
                        routeCode,
                        GDObj,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRItemGrid2(bool bStartQuery, string formID, string originNo, string originSerNo, string routeCode, object[] GDObj, string strMoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRItemGrid2", new object[] {
                        bStartQuery,
                        formID,
                        originNo,
                        originSerNo,
                        routeCode,
                        GDObj,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRItemGrid2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRItemGrid2Async(bool bStartQuery, string formID, string originNo, string originSerNo, string routeCode, object[] GDObj, string strMoreKey) {
            this.WfRItemGrid2Async(bStartQuery, formID, originNo, originSerNo, routeCode, GDObj, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfRItemGrid2Async(bool bStartQuery, string formID, string originNo, string originSerNo, string routeCode, object[] GDObj, string strMoreKey, object userState) {
            if ((this.WfRItemGrid2OperationCompleted == null)) {
                this.WfRItemGrid2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRItemGrid2OperationCompleted);
            }
            this.InvokeAsync("WfRItemGrid2", new object[] {
                        bStartQuery,
                        formID,
                        originNo,
                        originSerNo,
                        routeCode,
                        GDObj,
                        strMoreKey}, this.WfRItemGrid2OperationCompleted, userState);
        }
        
        private void OnWfRItemGrid2OperationCompleted(object arg) {
            if ((this.WfRItemGrid2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRItemGrid2Completed(this, new WfRItemGrid2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRDelete", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRDelete(object[] GDObj, string strRouteCode) {
            object[] results = this.Invoke("WfRDelete", new object[] {
                        GDObj,
                        strRouteCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRDelete(object[] GDObj, string strRouteCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRDelete", new object[] {
                        GDObj,
                        strRouteCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRDeleteAsync(object[] GDObj, string strRouteCode) {
            this.WfRDeleteAsync(GDObj, strRouteCode, null);
        }
        
        /// <remarks/>
        public void WfRDeleteAsync(object[] GDObj, string strRouteCode, object userState) {
            if ((this.WfRDeleteOperationCompleted == null)) {
                this.WfRDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRDeleteOperationCompleted);
            }
            this.InvokeAsync("WfRDelete", new object[] {
                        GDObj,
                        strRouteCode}, this.WfRDeleteOperationCompleted, userState);
        }
        
        private void OnWfRDeleteOperationCompleted(object arg) {
            if ((this.WfRDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRDeleteCompleted(this, new WfRDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRPopup", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRPopup(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfRPopup", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRPopup(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRPopup", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRPopup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRPopupAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfRPopupAsync(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfRPopupAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfRPopupOperationCompleted == null)) {
                this.WfRPopupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRPopupOperationCompleted);
            }
            this.InvokeAsync("WfRPopup", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfRPopupOperationCompleted, userState);
        }
        
        private void OnWfRPopupOperationCompleted(object arg) {
            if ((this.WfRPopupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRPopupCompleted(this, new WfRPopupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRPopup2", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRPopup2(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfRPopup2", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRPopup2(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRPopup2", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRPopup2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRPopup2Async(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfRPopup2Async(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfRPopup2Async(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfRPopup2OperationCompleted == null)) {
                this.WfRPopup2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRPopup2OperationCompleted);
            }
            this.InvokeAsync("WfRPopup2", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfRPopup2OperationCompleted, userState);
        }
        
        private void OnWfRPopup2OperationCompleted(object arg) {
            if ((this.WfRPopup2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRPopup2Completed(this, new WfRPopup2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRGetMail", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRGetMail(object[] GDObj, string strRouteCode, string strRouteStep) {
            object[] results = this.Invoke("WfRGetMail", new object[] {
                        GDObj,
                        strRouteCode,
                        strRouteStep});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRGetMail(object[] GDObj, string strRouteCode, string strRouteStep, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRGetMail", new object[] {
                        GDObj,
                        strRouteCode,
                        strRouteStep}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRGetMail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRGetMailAsync(object[] GDObj, string strRouteCode, string strRouteStep) {
            this.WfRGetMailAsync(GDObj, strRouteCode, strRouteStep, null);
        }
        
        /// <remarks/>
        public void WfRGetMailAsync(object[] GDObj, string strRouteCode, string strRouteStep, object userState) {
            if ((this.WfRGetMailOperationCompleted == null)) {
                this.WfRGetMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRGetMailOperationCompleted);
            }
            this.InvokeAsync("WfRGetMail", new object[] {
                        GDObj,
                        strRouteCode,
                        strRouteStep}, this.WfRGetMailOperationCompleted, userState);
        }
        
        private void OnWfRGetMailOperationCompleted(object arg) {
            if ((this.WfRGetMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRGetMailCompleted(this, new WfRGetMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfPSLoad", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfPSLoad(object[] GDObj, string strUserID) {
            object[] results = this.Invoke("WfPSLoad", new object[] {
                        GDObj,
                        strUserID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfPSLoad(object[] GDObj, string strUserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfPSLoad", new object[] {
                        GDObj,
                        strUserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfPSLoad(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfPSLoadAsync(object[] GDObj, string strUserID) {
            this.WfPSLoadAsync(GDObj, strUserID, null);
        }
        
        /// <remarks/>
        public void WfPSLoadAsync(object[] GDObj, string strUserID, object userState) {
            if ((this.WfPSLoadOperationCompleted == null)) {
                this.WfPSLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfPSLoadOperationCompleted);
            }
            this.InvokeAsync("WfPSLoad", new object[] {
                        GDObj,
                        strUserID}, this.WfPSLoadOperationCompleted, userState);
        }
        
        private void OnWfPSLoadOperationCompleted(object arg) {
            if ((this.WfPSLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfPSLoadCompleted(this, new WfPSLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfPSGrid", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfPSGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfPSGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfPSGrid(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfPSGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfPSGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfPSGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfPSGridAsync(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfPSGridAsync(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfPSGridOperationCompleted == null)) {
                this.WfPSGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfPSGridOperationCompleted);
            }
            this.InvokeAsync("WfPSGrid", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfPSGridOperationCompleted, userState);
        }
        
        private void OnWfPSGridOperationCompleted(object arg) {
            if ((this.WfPSGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfPSGridCompleted(this, new WfPSGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfPSGrid1", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfPSGrid1(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            object[] results = this.Invoke("WfPSGrid1", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfPSGrid1(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfPSGrid1", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfPSGrid1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfPSGrid1Async(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj) {
            this.WfPSGrid1Async(bStartQuery, strWhereClause, strCondition, Conditions, GDObj, null);
        }
        
        /// <remarks/>
        public void WfPSGrid1Async(bool bStartQuery, string strWhereClause, string strCondition, object[] Conditions, object[] GDObj, object userState) {
            if ((this.WfPSGrid1OperationCompleted == null)) {
                this.WfPSGrid1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfPSGrid1OperationCompleted);
            }
            this.InvokeAsync("WfPSGrid1", new object[] {
                        bStartQuery,
                        strWhereClause,
                        strCondition,
                        Conditions,
                        GDObj}, this.WfPSGrid1OperationCompleted, userState);
        }
        
        private void OnWfPSGrid1OperationCompleted(object arg) {
            if ((this.WfPSGrid1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfPSGrid1Completed(this, new WfPSGrid1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/GetDefaultRoute", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetDefaultRoute(object[] GDObj, string strSiteCode, string strFormID, string strUserID) {
            object[] results = this.Invoke("GetDefaultRoute", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strUserID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultRoute(object[] GDObj, string strSiteCode, string strFormID, string strUserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultRoute", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strUserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetDefaultRoute(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultRouteAsync(object[] GDObj, string strSiteCode, string strFormID, string strUserID) {
            this.GetDefaultRouteAsync(GDObj, strSiteCode, strFormID, strUserID, null);
        }
        
        /// <remarks/>
        public void GetDefaultRouteAsync(object[] GDObj, string strSiteCode, string strFormID, string strUserID, object userState) {
            if ((this.GetDefaultRouteOperationCompleted == null)) {
                this.GetDefaultRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultRouteOperationCompleted);
            }
            this.InvokeAsync("GetDefaultRoute", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strUserID}, this.GetDefaultRouteOperationCompleted, userState);
        }
        
        private void OnGetDefaultRouteOperationCompleted(object arg) {
            if ((this.GetDefaultRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultRouteCompleted(this, new GetDefaultRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/GetDomainName", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDomainName(string strClientID) {
            object[] results = this.Invoke("GetDomainName", new object[] {
                        strClientID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDomainName(string strClientID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDomainName", new object[] {
                        strClientID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDomainName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainNameAsync(string strClientID) {
            this.GetDomainNameAsync(strClientID, null);
        }
        
        /// <remarks/>
        public void GetDomainNameAsync(string strClientID, object userState) {
            if ((this.GetDomainNameOperationCompleted == null)) {
                this.GetDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainNameOperationCompleted);
            }
            this.InvokeAsync("GetDomainName", new object[] {
                        strClientID}, this.GetDomainNameOperationCompleted, userState);
        }
        
        private void OnGetDomainNameOperationCompleted(object arg) {
            if ((this.GetDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainNameCompleted(this, new GetDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDSave2", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDSave2(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string[] sarRouteStep, 
                    string WfAmount, 
                    string strMoreKey) {
            object[] results = this.Invoke("WfDSave2", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strRouteCode,
                        strDocuDescr,
                        strCurStep,
                        strDocuStatus,
                        sarUserID,
                        sarWfStatus,
                        sarWfDateTime,
                        sarRefUserID,
                        sarReadCheck,
                        sarReadDateTime,
                        sarRouteStep,
                        WfAmount,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDSave2(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string[] sarRouteStep, 
                    string WfAmount, 
                    string strMoreKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("WfDSave2", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strRouteCode,
                        strDocuDescr,
                        strCurStep,
                        strDocuStatus,
                        sarUserID,
                        sarWfStatus,
                        sarWfDateTime,
                        sarRefUserID,
                        sarReadCheck,
                        sarReadDateTime,
                        sarRouteStep,
                        WfAmount,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDSave2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDSave2Async(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string[] sarRouteStep, 
                    string WfAmount, 
                    string strMoreKey) {
            this.WfDSave2Async(GDObj, strLangID, strSiteCode, strFormID, strOriginNo, strOriginSerNo, strRouteCode, strDocuDescr, strCurStep, strDocuStatus, sarUserID, sarWfStatus, sarWfDateTime, sarRefUserID, sarReadCheck, sarReadDateTime, sarRouteStep, WfAmount, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfDSave2Async(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string[] sarRouteStep, 
                    string WfAmount, 
                    string strMoreKey, 
                    object userState) {
            if ((this.WfDSave2OperationCompleted == null)) {
                this.WfDSave2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDSave2OperationCompleted);
            }
            this.InvokeAsync("WfDSave2", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strRouteCode,
                        strDocuDescr,
                        strCurStep,
                        strDocuStatus,
                        sarUserID,
                        sarWfStatus,
                        sarWfDateTime,
                        sarRefUserID,
                        sarReadCheck,
                        sarReadDateTime,
                        sarRouteStep,
                        WfAmount,
                        strMoreKey}, this.WfDSave2OperationCompleted, userState);
        }
        
        private void OnWfDSave2OperationCompleted(object arg) {
            if ((this.WfDSave2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDSave2Completed(this, new WfDSave2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDSave", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDSave(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string strMoreKey) {
            object[] results = this.Invoke("WfDSave", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strRouteCode,
                        strDocuDescr,
                        strCurStep,
                        strDocuStatus,
                        sarUserID,
                        sarWfStatus,
                        sarWfDateTime,
                        sarRefUserID,
                        sarReadCheck,
                        sarReadDateTime,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDSave(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string strMoreKey, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("WfDSave", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strRouteCode,
                        strDocuDescr,
                        strCurStep,
                        strDocuStatus,
                        sarUserID,
                        sarWfStatus,
                        sarWfDateTime,
                        sarRefUserID,
                        sarReadCheck,
                        sarReadDateTime,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDSave(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDSaveAsync(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string strMoreKey) {
            this.WfDSaveAsync(GDObj, strLangID, strSiteCode, strFormID, strOriginNo, strOriginSerNo, strRouteCode, strDocuDescr, strCurStep, strDocuStatus, sarUserID, sarWfStatus, sarWfDateTime, sarRefUserID, sarReadCheck, sarReadDateTime, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfDSaveAsync(
                    object[] GDObj, 
                    string strLangID, 
                    string strSiteCode, 
                    string strFormID, 
                    string strOriginNo, 
                    string strOriginSerNo, 
                    string strRouteCode, 
                    string strDocuDescr, 
                    string strCurStep, 
                    string strDocuStatus, 
                    string[] sarUserID, 
                    string[] sarWfStatus, 
                    string[] sarWfDateTime, 
                    string[] sarRefUserID, 
                    string[] sarReadCheck, 
                    string[] sarReadDateTime, 
                    string strMoreKey, 
                    object userState) {
            if ((this.WfDSaveOperationCompleted == null)) {
                this.WfDSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDSaveOperationCompleted);
            }
            this.InvokeAsync("WfDSave", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strRouteCode,
                        strDocuDescr,
                        strCurStep,
                        strDocuStatus,
                        sarUserID,
                        sarWfStatus,
                        sarWfDateTime,
                        sarRefUserID,
                        sarReadCheck,
                        sarReadDateTime,
                        strMoreKey}, this.WfDSaveOperationCompleted, userState);
        }
        
        private void OnWfDSaveOperationCompleted(object arg) {
            if ((this.WfDSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDSaveCompleted(this, new WfDSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDLoad1", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDLoad1(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            object[] results = this.Invoke("WfDLoad1", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDLoad1(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDLoad1", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDLoad1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDLoad1Async(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            this.WfDLoad1Async(GDObj, strSiteCode, strFormID, strOriginNo, strOriginSerNo, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfDLoad1Async(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, object userState) {
            if ((this.WfDLoad1OperationCompleted == null)) {
                this.WfDLoad1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDLoad1OperationCompleted);
            }
            this.InvokeAsync("WfDLoad1", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, this.WfDLoad1OperationCompleted, userState);
        }
        
        private void OnWfDLoad1OperationCompleted(object arg) {
            if ((this.WfDLoad1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDLoad1Completed(this, new WfDLoad1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDLoad2", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDLoad2(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            object[] results = this.Invoke("WfDLoad2", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDLoad2(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDLoad2", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDLoad2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDLoad2Async(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            this.WfDLoad2Async(GDObj, strSiteCode, strFormID, strOriginNo, strOriginSerNo, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfDLoad2Async(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, object userState) {
            if ((this.WfDLoad2OperationCompleted == null)) {
                this.WfDLoad2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDLoad2OperationCompleted);
            }
            this.InvokeAsync("WfDLoad2", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, this.WfDLoad2OperationCompleted, userState);
        }
        
        private void OnWfDLoad2OperationCompleted(object arg) {
            if ((this.WfDLoad2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDLoad2Completed(this, new WfDLoad2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDLoad3", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDLoad3(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            object[] results = this.Invoke("WfDLoad3", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDLoad3(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDLoad3", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDLoad3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDLoad3Async(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            this.WfDLoad3Async(GDObj, strSiteCode, strFormID, strOriginNo, strOriginSerNo, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfDLoad3Async(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, object userState) {
            if ((this.WfDLoad3OperationCompleted == null)) {
                this.WfDLoad3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDLoad3OperationCompleted);
            }
            this.InvokeAsync("WfDLoad3", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, this.WfDLoad3OperationCompleted, userState);
        }
        
        private void OnWfDLoad3OperationCompleted(object arg) {
            if ((this.WfDLoad3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDLoad3Completed(this, new WfDLoad3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDDelete", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDDelete(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            object[] results = this.Invoke("WfDDelete", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDDelete(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDDelete", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDDeleteAsync(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey) {
            this.WfDDeleteAsync(GDObj, strSiteCode, strFormID, strOriginNo, strOriginSerNo, strMoreKey, null);
        }
        
        /// <remarks/>
        public void WfDDeleteAsync(object[] GDObj, string strSiteCode, string strFormID, string strOriginNo, string strOriginSerNo, string strMoreKey, object userState) {
            if ((this.WfDDeleteOperationCompleted == null)) {
                this.WfDDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDDeleteOperationCompleted);
            }
            this.InvokeAsync("WfDDelete", new object[] {
                        GDObj,
                        strSiteCode,
                        strFormID,
                        strOriginNo,
                        strOriginSerNo,
                        strMoreKey}, this.WfDDeleteOperationCompleted, userState);
        }
        
        private void OnWfDDeleteOperationCompleted(object arg) {
            if ((this.WfDDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDDeleteCompleted(this, new WfDDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDOneQue", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDOneQue(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarCurStep, string[] sarStepCnt, string strAction) {
            object[] results = this.Invoke("WfDOneQue", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strCurTime,
                        strUserID,
                        sarFormID,
                        sarOriginNo,
                        sarOriginSerNo,
                        sarCurStep,
                        sarStepCnt,
                        strAction});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDOneQue(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarCurStep, string[] sarStepCnt, string strAction, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDOneQue", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strCurTime,
                        strUserID,
                        sarFormID,
                        sarOriginNo,
                        sarOriginSerNo,
                        sarCurStep,
                        sarStepCnt,
                        strAction}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDOneQue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDOneQueAsync(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarCurStep, string[] sarStepCnt, string strAction) {
            this.WfDOneQueAsync(GDObj, strLangID, strSiteCode, strCurTime, strUserID, sarFormID, sarOriginNo, sarOriginSerNo, sarCurStep, sarStepCnt, strAction, null);
        }
        
        /// <remarks/>
        public void WfDOneQueAsync(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarCurStep, string[] sarStepCnt, string strAction, object userState) {
            if ((this.WfDOneQueOperationCompleted == null)) {
                this.WfDOneQueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDOneQueOperationCompleted);
            }
            this.InvokeAsync("WfDOneQue", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strCurTime,
                        strUserID,
                        sarFormID,
                        sarOriginNo,
                        sarOriginSerNo,
                        sarCurStep,
                        sarStepCnt,
                        strAction}, this.WfDOneQueOperationCompleted, userState);
        }
        
        private void OnWfDOneQueOperationCompleted(object arg) {
            if ((this.WfDOneQueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDOneQueCompleted(this, new WfDOneQueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDReadCheck", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDReadCheck(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarReadCheck) {
            object[] results = this.Invoke("WfDReadCheck", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strCurTime,
                        strUserID,
                        sarFormID,
                        sarOriginNo,
                        sarOriginSerNo,
                        sarReadCheck});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDReadCheck(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarReadCheck, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDReadCheck", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strCurTime,
                        strUserID,
                        sarFormID,
                        sarOriginNo,
                        sarOriginSerNo,
                        sarReadCheck}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDReadCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDReadCheckAsync(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarReadCheck) {
            this.WfDReadCheckAsync(GDObj, strLangID, strSiteCode, strCurTime, strUserID, sarFormID, sarOriginNo, sarOriginSerNo, sarReadCheck, null);
        }
        
        /// <remarks/>
        public void WfDReadCheckAsync(object[] GDObj, string strLangID, string strSiteCode, string strCurTime, string strUserID, string[] sarFormID, string[] sarOriginNo, string[] sarOriginSerNo, string[] sarReadCheck, object userState) {
            if ((this.WfDReadCheckOperationCompleted == null)) {
                this.WfDReadCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDReadCheckOperationCompleted);
            }
            this.InvokeAsync("WfDReadCheck", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strCurTime,
                        strUserID,
                        sarFormID,
                        sarOriginNo,
                        sarOriginSerNo,
                        sarReadCheck}, this.WfDReadCheckOperationCompleted, userState);
        }
        
        private void OnWfDReadCheckOperationCompleted(object arg) {
            if ((this.WfDReadCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDReadCheckCompleted(this, new WfDReadCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfIBQuery", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfIBQuery(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strFormID) {
            object[] results = this.Invoke("WfIBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strFormID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfIBQuery(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strFormID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfIBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strFormID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfIBQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfIBQueryAsync(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strFormID) {
            this.WfIBQueryAsync(GDObj, strLangID, strSiteCode, strUserID, strFormID, null);
        }
        
        /// <remarks/>
        public void WfIBQueryAsync(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strFormID, object userState) {
            if ((this.WfIBQueryOperationCompleted == null)) {
                this.WfIBQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfIBQueryOperationCompleted);
            }
            this.InvokeAsync("WfIBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strFormID}, this.WfIBQueryOperationCompleted, userState);
        }
        
        private void OnWfIBQueryOperationCompleted(object arg) {
            if ((this.WfIBQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfIBQueryCompleted(this, new WfIBQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfIBCount", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfIBCount(object[] GDObj) {
            object[] results = this.Invoke("WfIBCount", new object[] {
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfIBCount(object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfIBCount", new object[] {
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfIBCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfIBCountAsync(object[] GDObj) {
            this.WfIBCountAsync(GDObj, null);
        }
        
        /// <remarks/>
        public void WfIBCountAsync(object[] GDObj, object userState) {
            if ((this.WfIBCountOperationCompleted == null)) {
                this.WfIBCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfIBCountOperationCompleted);
            }
            this.InvokeAsync("WfIBCount", new object[] {
                        GDObj}, this.WfIBCountOperationCompleted, userState);
        }
        
        private void OnWfIBCountOperationCompleted(object arg) {
            if ((this.WfIBCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfIBCountCompleted(this, new WfIBCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfMBQuery", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfMBQuery(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA, bool bIncludeC) {
            object[] results = this.Invoke("WfMBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strBDate,
                        strEDate,
                        strFormID,
                        bIncludeA,
                        bIncludeC});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfMBQuery(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA, bool bIncludeC, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfMBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strBDate,
                        strEDate,
                        strFormID,
                        bIncludeA,
                        bIncludeC}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfMBQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfMBQueryAsync(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA, bool bIncludeC) {
            this.WfMBQueryAsync(GDObj, strLangID, strSiteCode, strUserID, strBDate, strEDate, strFormID, bIncludeA, bIncludeC, null);
        }
        
        /// <remarks/>
        public void WfMBQueryAsync(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA, bool bIncludeC, object userState) {
            if ((this.WfMBQueryOperationCompleted == null)) {
                this.WfMBQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfMBQueryOperationCompleted);
            }
            this.InvokeAsync("WfMBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strBDate,
                        strEDate,
                        strFormID,
                        bIncludeA,
                        bIncludeC}, this.WfMBQueryOperationCompleted, userState);
        }
        
        private void OnWfMBQueryOperationCompleted(object arg) {
            if ((this.WfMBQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfMBQueryCompleted(this, new WfMBQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRBQuery", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRBQuery(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA) {
            object[] results = this.Invoke("WfRBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strBDate,
                        strEDate,
                        strFormID,
                        bIncludeA});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRBQuery(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strBDate,
                        strEDate,
                        strFormID,
                        bIncludeA}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRBQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRBQueryAsync(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA) {
            this.WfRBQueryAsync(GDObj, strLangID, strSiteCode, strUserID, strBDate, strEDate, strFormID, bIncludeA, null);
        }
        
        /// <remarks/>
        public void WfRBQueryAsync(object[] GDObj, string strLangID, string strSiteCode, string strUserID, string strBDate, string strEDate, string strFormID, bool bIncludeA, object userState) {
            if ((this.WfRBQueryOperationCompleted == null)) {
                this.WfRBQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRBQueryOperationCompleted);
            }
            this.InvokeAsync("WfRBQuery", new object[] {
                        GDObj,
                        strLangID,
                        strSiteCode,
                        strUserID,
                        strBDate,
                        strEDate,
                        strFormID,
                        bIncludeA}, this.WfRBQueryOperationCompleted, userState);
        }
        
        private void OnWfRBQueryOperationCompleted(object arg) {
            if ((this.WfRBQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRBQueryCompleted(this, new WfRBQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRBCount", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRBCount(object[] GDObj) {
            object[] results = this.Invoke("WfRBCount", new object[] {
                        GDObj});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRBCount(object[] GDObj, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRBCount", new object[] {
                        GDObj}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRBCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRBCountAsync(object[] GDObj) {
            this.WfRBCountAsync(GDObj, null);
        }
        
        /// <remarks/>
        public void WfRBCountAsync(object[] GDObj, object userState) {
            if ((this.WfRBCountOperationCompleted == null)) {
                this.WfRBCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRBCountOperationCompleted);
            }
            this.InvokeAsync("WfRBCount", new object[] {
                        GDObj}, this.WfRBCountOperationCompleted, userState);
        }
        
        private void OnWfRBCountOperationCompleted(object arg) {
            if ((this.WfRBCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRBCountCompleted(this, new WfRBCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfDoCount", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfDoCount(object[] GDObj, string siteCode, string RouteCode) {
            object[] results = this.Invoke("WfDoCount", new object[] {
                        GDObj,
                        siteCode,
                        RouteCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfDoCount(object[] GDObj, string siteCode, string RouteCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfDoCount", new object[] {
                        GDObj,
                        siteCode,
                        RouteCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfDoCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfDoCountAsync(object[] GDObj, string siteCode, string RouteCode) {
            this.WfDoCountAsync(GDObj, siteCode, RouteCode, null);
        }
        
        /// <remarks/>
        public void WfDoCountAsync(object[] GDObj, string siteCode, string RouteCode, object userState) {
            if ((this.WfDoCountOperationCompleted == null)) {
                this.WfDoCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfDoCountOperationCompleted);
            }
            this.InvokeAsync("WfDoCount", new object[] {
                        GDObj,
                        siteCode,
                        RouteCode}, this.WfDoCountOperationCompleted, userState);
        }
        
        private void OnWfDoCountOperationCompleted(object arg) {
            if ((this.WfDoCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfDoCountCompleted(this, new WfDoCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/WfRouteStep", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] WfRouteStep(object[] GDObj, string userID, string RouteCode) {
            object[] results = this.Invoke("WfRouteStep", new object[] {
                        GDObj,
                        userID,
                        RouteCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWfRouteStep(object[] GDObj, string userID, string RouteCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WfRouteStep", new object[] {
                        GDObj,
                        userID,
                        RouteCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndWfRouteStep(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void WfRouteStepAsync(object[] GDObj, string userID, string RouteCode) {
            this.WfRouteStepAsync(GDObj, userID, RouteCode, null);
        }
        
        /// <remarks/>
        public void WfRouteStepAsync(object[] GDObj, string userID, string RouteCode, object userState) {
            if ((this.WfRouteStepOperationCompleted == null)) {
                this.WfRouteStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWfRouteStepOperationCompleted);
            }
            this.InvokeAsync("WfRouteStep", new object[] {
                        GDObj,
                        userID,
                        RouteCode}, this.WfRouteStepOperationCompleted, userState);
        }
        
        private void OnWfRouteStepOperationCompleted(object arg) {
            if ((this.WfRouteStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WfRouteStepCompleted(this, new WfRouteStepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/CanBeApprove", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] CanBeApprove(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string MoreKey) {
            object[] results = this.Invoke("CanBeApprove", new object[] {
                        GDObj,
                        RouteCode,
                        RouteStep,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        MoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCanBeApprove(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string MoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CanBeApprove", new object[] {
                        GDObj,
                        RouteCode,
                        RouteStep,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        MoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndCanBeApprove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void CanBeApproveAsync(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string MoreKey) {
            this.CanBeApproveAsync(GDObj, RouteCode, RouteStep, FormID, OriginNo, OriginSerNo, MoreKey, null);
        }
        
        /// <remarks/>
        public void CanBeApproveAsync(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string MoreKey, object userState) {
            if ((this.CanBeApproveOperationCompleted == null)) {
                this.CanBeApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanBeApproveOperationCompleted);
            }
            this.InvokeAsync("CanBeApprove", new object[] {
                        GDObj,
                        RouteCode,
                        RouteStep,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        MoreKey}, this.CanBeApproveOperationCompleted, userState);
        }
        
        private void OnCanBeApproveOperationCompleted(object arg) {
            if ((this.CanBeApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanBeApproveCompleted(this, new CanBeApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/hasApproved", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] hasApproved(object[] GDObj, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey) {
            object[] results = this.Invoke("hasApproved", new object[] {
                        GDObj,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        UserID,
                        MoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginhasApproved(object[] GDObj, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("hasApproved", new object[] {
                        GDObj,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        UserID,
                        MoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndhasApproved(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void hasApprovedAsync(object[] GDObj, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey) {
            this.hasApprovedAsync(GDObj, FormID, OriginNo, OriginSerNo, UserID, MoreKey, null);
        }
        
        /// <remarks/>
        public void hasApprovedAsync(object[] GDObj, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey, object userState) {
            if ((this.hasApprovedOperationCompleted == null)) {
                this.hasApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasApprovedOperationCompleted);
            }
            this.InvokeAsync("hasApproved", new object[] {
                        GDObj,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        UserID,
                        MoreKey}, this.hasApprovedOperationCompleted, userState);
        }
        
        private void OnhasApprovedOperationCompleted(object arg) {
            if ((this.hasApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasApprovedCompleted(this, new hasApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WorkFlow.UsgKorea.com/getApproveAll", RequestNamespace="http://WorkFlow.UsgKorea.com", ResponseNamespace="http://WorkFlow.UsgKorea.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] getApproveAll(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey) {
            object[] results = this.Invoke("getApproveAll", new object[] {
                        GDObj,
                        RouteCode,
                        RouteStep,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        UserID,
                        MoreKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetApproveAll(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getApproveAll", new object[] {
                        GDObj,
                        RouteCode,
                        RouteStep,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        UserID,
                        MoreKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndgetApproveAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getApproveAllAsync(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey) {
            this.getApproveAllAsync(GDObj, RouteCode, RouteStep, FormID, OriginNo, OriginSerNo, UserID, MoreKey, null);
        }
        
        /// <remarks/>
        public void getApproveAllAsync(object[] GDObj, string RouteCode, int RouteStep, string FormID, string OriginNo, string OriginSerNo, string UserID, string MoreKey, object userState) {
            if ((this.getApproveAllOperationCompleted == null)) {
                this.getApproveAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApproveAllOperationCompleted);
            }
            this.InvokeAsync("getApproveAll", new object[] {
                        GDObj,
                        RouteCode,
                        RouteStep,
                        FormID,
                        OriginNo,
                        OriginSerNo,
                        UserID,
                        MoreKey}, this.getApproveAllOperationCompleted, userState);
        }
        
        private void OngetApproveAllOperationCompleted(object arg) {
            if ((this.getApproveAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApproveAllCompleted(this, new getApproveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfSMGridCompletedEventHandler(object sender, WfSMGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfSMGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfSMGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfSMSaveCompletedEventHandler(object sender, WfSMSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfSMSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfSMSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfSMDdlCompletedEventHandler(object sender, WfSMDdlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfSMDdlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfSMDdlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfSMGetWfUseCompletedEventHandler(object sender, WfSMGetWfUseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfSMGetWfUseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfSMGetWfUseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRGridCompletedEventHandler(object sender, WfRGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRSaveCompletedEventHandler(object sender, WfRSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRLoadCompletedEventHandler(object sender, WfRLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRItemGridCompletedEventHandler(object sender, WfRItemGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRItemGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRItemGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRItemGrid2CompletedEventHandler(object sender, WfRItemGrid2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRItemGrid2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRItemGrid2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRDeleteCompletedEventHandler(object sender, WfRDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRPopupCompletedEventHandler(object sender, WfRPopupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRPopupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRPopupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRPopup2CompletedEventHandler(object sender, WfRPopup2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRPopup2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRPopup2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRGetMailCompletedEventHandler(object sender, WfRGetMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRGetMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRGetMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfPSLoadCompletedEventHandler(object sender, WfPSLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfPSLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfPSLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfPSGridCompletedEventHandler(object sender, WfPSGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfPSGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfPSGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfPSGrid1CompletedEventHandler(object sender, WfPSGrid1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfPSGrid1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfPSGrid1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetDefaultRouteCompletedEventHandler(object sender, GetDefaultRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetDomainNameCompletedEventHandler(object sender, GetDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDSave2CompletedEventHandler(object sender, WfDSave2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDSave2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDSave2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDSaveCompletedEventHandler(object sender, WfDSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDLoad1CompletedEventHandler(object sender, WfDLoad1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDLoad1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDLoad1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDLoad2CompletedEventHandler(object sender, WfDLoad2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDLoad2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDLoad2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDLoad3CompletedEventHandler(object sender, WfDLoad3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDLoad3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDLoad3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDDeleteCompletedEventHandler(object sender, WfDDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDOneQueCompletedEventHandler(object sender, WfDOneQueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDOneQueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDOneQueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDReadCheckCompletedEventHandler(object sender, WfDReadCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDReadCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDReadCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfIBQueryCompletedEventHandler(object sender, WfIBQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfIBQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfIBQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfIBCountCompletedEventHandler(object sender, WfIBCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfIBCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfIBCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfMBQueryCompletedEventHandler(object sender, WfMBQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfMBQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfMBQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRBQueryCompletedEventHandler(object sender, WfRBQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRBQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRBQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRBCountCompletedEventHandler(object sender, WfRBCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRBCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRBCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfDoCountCompletedEventHandler(object sender, WfDoCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfDoCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfDoCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WfRouteStepCompletedEventHandler(object sender, WfRouteStepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WfRouteStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WfRouteStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CanBeApproveCompletedEventHandler(object sender, CanBeApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanBeApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanBeApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void hasApprovedCompletedEventHandler(object sender, hasApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hasApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getApproveAllCompletedEventHandler(object sender, getApproveAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApproveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApproveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591